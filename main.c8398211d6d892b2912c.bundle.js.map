{"version":3,"file":"main.c8398211d6d892b2912c.bundle.js","sources":["webpack:///./src/components/LoginCard/LoginForm.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Form, Icon, Input, Button , Typography } from 'antd';\nimport Proptypes from '../proptypes';\n\n\nconst { Title } = Typography;\nconst StyledForm = styled(Form)`\n  align: center;\n  width: 100%;\n`\nconst FormHeader = styled.div`\n  font-size: 22px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  text-align: center;\n`;\nconst StyledLink = styled.a`\n  font-size: 14px;\n  font-weight: 700;\n`;\n\nconst LoginForm = ({ form, onAction, redirectToForgotPassword }) => {\n  function handleSubmit(e) {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        onAction(values);\n      }\n    });\n  }\n\n  const { getFieldDecorator } = form;\n  return (\n    <StyledForm onSubmit={handleSubmit} className=\"login-form\">\n      <Title level={3} style={{ textAlign: 'center' }}>Welcome Back!</Title>\n      <Form.Item>\n        {getFieldDecorator('username', {\n          rules: [{ required: true, message: 'Please input your username!' }],\n        })(\n          <Input\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"Username\"\n          />,\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('password', {\n          rules: [{ required: true, message: 'Please input your Password!' }],\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />,\n        )}\n      </Form.Item>\n      <Form.Item>\n        <StyledLink className=\"login-form-forgot\" onClick={redirectToForgotPassword}>\n          Forgot password?\n        </StyledLink>\n        <br />\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\n          Login to continue\n        </Button>\n      </Form.Item>\n    </StyledForm>\n  );\n};\n\nLoginForm.propTypes = {\n  redirectToForgotPassword: Proptypes.func.isRequired,\n  onAction: Proptypes.func.isRequired,\n  form: Proptypes.string.isRequired\n};\n\nconst WrappedNormalLoginForm = Form.create({ name: 'login_form' })(LoginForm);\n\nexport default WrappedNormalLoginForm;\n"],"mappings":"AAMA","sourceRoot":""}